CREATE TABLE menu (
  menuId INT UNIQUE,
  name TEXT,
  price REAL,
  PRIMARY KEY (menuId)
);

INSERT INTO menu VALUES
  (1, 'M1', 1000),
  (2, 'M2', 500),
  (3, 'M3', 250);

CREATE TABLE employee (
  employeeId INT UNIQUE,
  firstname TEXT,
  position TEXT,
  branchId INT,
  salary REAL,
  PRIMARY KEY (employeeId),
  FOREIGN KEY (branchId) references branch(branchId)
);

INSERT INTO employee VALUES 
  (1, 'E1', 'Manager', 1, 50000),
  (2, 'E2', 'Staff', 1, 20000),
  (3, 'E3', 'Manager', 2, 50000),
  (4, 'E4', 'Staff', 2, 20000);

CREATE TABLE branch (
  branchId INT UNIQUE,
  city TEXT,
  country TEXT,
  PRIMARY KEY (branchId)
);

INSERT INTO branch VALUES
  (1, 'BKK', 'TH'),
  (2, 'BKK2', 'TH');

CREATE TABLE customer (
  customerId INT UNIQUE,
  name TEXT,
  customerType TEXT,
  PRIMARY KEY (customerId)
);

INSERT INTO customer VALUES 
  (1, 'C1', 'Member'),
  (2, 'C2', 'VIP'),
  (3, 'C3', 'Member');

CREATE TABLE orders (
  ordersId INT UNIQUE,
  branchId INT,
  customerId INT,
  employeeId INT,
  ordersDate DATE,
  ordersPrice REAL,
  PRIMARY KEY (ordersId),
  FOREIGN KEY (branchId) references branch(branchId),
  FOREIGN KEY (customerId) references customer(customerId),
  FOREIGN KEY (employeeId) references employee(employeeId)
);

INSERT INTO orders VALUES 
  (1, 1, 1, 2, '2022-09-09', 4000),
  (2, 1, 2, 2, '2022-08-30', 1250),
  (3, 2, 3, 4, '2022-09-09', 750),
  (4, 2, 3, 4, '2022-08-01', 1750);

.mode markdown
.header on

SELECT * FROM orders;
SELECT * FROM employee;

SELECT
  Month,
  COUNT(*) AS n_orders
FROM (
  SELECT 
  ordersDate,
  CASE 
  WHEN STRFTIME('%m',ordersDate) LIKE '09' THEN 'SEP'
  ELSE 'AUG'
  END AS 'Month'
FROM orders
) AS sub
GROUP BY month
ORDER BY n_orders DESC;

WITH totalSales AS (
SELECT
  firstname AS sellerName,
  ordersPrice AS sales,
  city AS city
FROM
  employee E, orders O, branch B
WHERE E.employeeId = O.employeeId
AND   B.branchId = O.branchId
)
SELECT
  sellerName,
  SUM(sales)
FROM totalSales
GROUP BY sellerName
ORDER BY sales DESC;

SELECT * FROM customer;

WITH totalSalesByCustomer AS (
  SELECT
  customerType,
  orders.customerId,
  ordersPrice
FROM customer
JOIN orders ON customer.customerId = orders.customerId
)
SELECT
  customerId,
  customerType,
  SUM(ordersPrice) AS totalSales
FROM totalSalesByCustomer
WHERE customerType LIKE 'Member'
GROUP BY customerId
ORDER BY totalSales DESC;
